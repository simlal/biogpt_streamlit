import translators as ts
import translators.server as tss

deepl_langs = [
    "bg", 
    "cs",
    "da",
    "de",
    "el",
    "en",
    "es",
    "et",
    "fi",
    "fr",
    "hu",
    "id",
    "it",
    "ja",
    "ko",
    "lt",
    "lv",
    "nb",
    "nl",
    "pl",
    "pt",
    "ro",
    "ru",
    "sk",
    "sl",
    "sv",
    "tr",
    "uk",
    "zh"
]

google_langs = [
    "af",
    "ak",
    "am",
    "ar",
    "as",
    "auto",
    "ay",
    "az",
    "be",
    "bg",
    "bho",
    "bm",
    "bn",
    "bs",
    "ca",
    "ceb",
    "ckb",
    "co",
    "cs",
    "cy",
    "da",
    "de",
    "doi",
    "dv",
    "ee",
    "el",
    "en",
    "en-US",
    "eo",
    "es",
    "et",
    "eu",
    "fa",
    "fi",
    "fr",
    "fy",
    "ga",
    "gd",
    "gl",
    "gn",
    "gom",
    "gu",
    "ha",
    "haw",
    "hi",
    "hmn",
    "hr",
    "ht",
    "hu",
    "hy",
    "id",
    "ig",
    "ilo",
    "is",
    "it",
    "iw",
    "ja",
    "jw",
    "ka",
    "kk",
    "km",
    "kn",
    "ko",
    "kri",
    "ku",
    "ky",
    "la",
    "lb",
    "lg",
    "ln",
    "lo",
    "lt",
    "lus",
    "lv",
    "mai",
    "mg",
    "mi",
    "mk",
    "ml",
    "mn",
    "mni-Mtei",
    "mr",
    "ms",
    "mt",
    "my",
    "ne",
    "nl",
    "no",
    "nso",
    "ny",
    "om",
    "or",
    "pa",
    "pl",
    "ps",
    "pt",
    "qu",
    "ro",
    "ru",
    "rw",
    "sa",
    "sd",
    "si",
    "sk",
    "sl",
    "sm",
    "sn",
    "so",
    "sq",
    "sr",
    "st",
    "su",
    "sv",
    "sw",
    "ta",
    "te",
    "tg",
    "th",
    "ti",
    "tk",
    "tl",
    "tr",
    "ts",
    "tt",
    "ug",
    "uk",
    "ur",
    "uz",
    "vi",
    "xh",
    "yi",
    "yo",
    "zh-CN",
    "zh-TW",
    "zu"
]

in_text = "I love dogs, they are the best"
lang_in = "en"
lang_out = "fr"
in_fr = "J'aime les chiens, ils sont les meilleurs"

def translate_query(in_text, translator, lang_in, lang_out):
    out_text = ts.translate_text(in_text, translator, lang_in, lang_out)
    return out_text

if __name__ == "__main__":
    # assert lang_in in google_langs, f"lang_in not in supported langs : {google_langs}"
    print(translate_query(in_text=in_text, translator="google", lang_in=lang_in, lang_out=lang_out))
    print(ts.translate_text(in_fr, translator="google"))
    # print(len(in_text))
    # for lang in enumerate(google_langs):
    #     if lang[1] == "en":
    #         print(lang)
    # print([lang for lang in enumerate(deepl_langs) if lang[1] == "en" ][0][0])
    # print([lang.upper() for lang in google_langs])